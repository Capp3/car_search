[project]
name = "car-search"
version = "0.0.2"
description = "A LLM connected car search utility"
authors = [{ name = "Dom Capparelli", email = "web@capparelli.ie" }]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.11,<4.0"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "beautifulsoup4>=4.12.2",
    "requests>=2.31.0",
    "selenium>=4.19.0",
    "webdriver-manager>=4.0.1",
    "aiohttp>=3.9.3",
    "pydantic>=2.5.3",
    "textual>=0.43.1",
    "rich>=13.7.0",
    "google-generativeai>=0.3.2",
    "openai>=1.76.0",
    "anthropic>=0.8.1",
    "python-dotenv>=1.0.0",
    "typer>=0.9.0",
    "PyQt6>=6.9.0",
    "responses>=0.24.1",
    "pydantic-settings>=2.9.1",
    "playwright>=1.51.0",
]

[dependency-groups]
dev = [
    "pytest>=7.4.3",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",
    "setuptools>=80.0.0",
    "mypy>=1.15.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true

[build-system]
requires = ["setuptools >= 77.0.3"]
build-backend = "setuptools.build_meta"
